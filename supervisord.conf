[supervisord]
nodaemon=true
user=nextjs
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700
chown=nextjs:nodejs

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

# Next.js Frontend Application
[program:web]
command=npm start
directory=/app/apps/web
user=nextjs
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/web.err.log
stdout_logfile=/var/log/supervisor/web.out.log
environment=NODE_ENV=production,PORT=3000
stopwaitsecs=10
killasgroup=true
stopasgroup=true

# NestJS Backend API
[program:api]
command=node dist/main.js
directory=/app/apps/api
user=nextjs
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/api.err.log
stdout_logfile=/var/log/supervisor/api.out.log
environment=NODE_ENV=production,PORT=3001
stopwaitsecs=10
killasgroup=true
stopasgroup=true

# Nginx Reverse Proxy
[program:nginx]
command=nginx -g "daemon off;"
user=root
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/nginx.err.log
stdout_logfile=/var/log/supervisor/nginx.out.log
stopwaitsecs=5
killasgroup=true
stopasgroup=true

# Database Migration Runner (runs once on startup)
[program:migrate]
command=npx prisma migrate deploy
directory=/app/packages/database
user=nextjs
autostart=true
autorestart=false
startsecs=0
stderr_logfile=/var/log/supervisor/migrate.err.log
stdout_logfile=/var/log/supervisor/migrate.out.log
exitcodes=0
stopwaitsecs=30

# Queue Worker for Background Jobs
[program:queue-worker]
command=node dist/queue-worker.js
directory=/app/apps/api
user=nextjs
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/queue-worker.err.log
stdout_logfile=/var/log/supervisor/queue-worker.out.log
environment=NODE_ENV=production
stopwaitsecs=10
killasgroup=true
stopasgroup=true
numprocs=2
process_name=%(program_name)s_%(process_num)02d

# Cron Jobs Manager
[program:cron]
command=node dist/cron.js
directory=/app/apps/api
user=nextjs
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/cron.err.log
stdout_logfile=/var/log/supervisor/cron.out.log
environment=NODE_ENV=production
stopwaitsecs=10
killasgroup=true
stopasgroup=true

# Log rotation for application logs
[program:logrotate]
command=logrotate -f /etc/logrotate.d/app
user=root
autostart=false
autorestart=false
startsecs=0
exitcodes=0

# Health check service
[program:healthcheck]
command=/app/scripts/healthcheck.sh
user=nextjs
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/healthcheck.err.log
stdout_logfile=/var/log/supervisor/healthcheck.out.log
stopwaitsecs=5

# Event listeners for process monitoring
[eventlistener:crashmail]
command=/app/scripts/crashmail.py
events=PROCESS_STATE_EXITED
user=nextjs
autostart=true
autorestart=unexpected
stderr_logfile=/var/log/supervisor/crashmail.err.log
stdout_logfile=/var/log/supervisor/crashmail.out.log

# Group configuration for easier management
[group:app]
programs=web,api,queue-worker,cron
priority=999

[group:infrastructure]
programs=nginx,migrate
priority=100